// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package db

import (
	"time"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

type Account struct {
	ID               uuid.UUID   `json:"id"`
	BudgetID         uuid.UUID   `json:"budget_id"`
	Name             string      `json:"name"`
	Type             string      `json:"type"`
	Closed           bool        `json:"closed"`
	Note             pgtype.Text `json:"note"`
	Balance          int32       `json:"balance"`
	ClearedBalance   int32       `json:"cleared_balance"`
	UnclearedBalance int32       `json:"uncleared_balance"`
	LastReconciledAt time.Time   `json:"last_reconciled_at"`
}

type Budget struct {
	ID            uuid.UUID `json:"id"`
	OwnerUsername string    `json:"owner_username"`
	Name          string    `json:"name"`
	CurrencyCode  string    `json:"currency_code"`
}

type Category struct {
	ID              uuid.UUID `json:"id"`
	CategoryGroupID uuid.UUID `json:"category_group_id"`
	Name            string    `json:"name"`
}

type CategoryGroup struct {
	ID       uuid.UUID `json:"id"`
	BudgetID uuid.UUID `json:"budget_id"`
	Name     string    `json:"name"`
}

type Payee struct {
	ID       uuid.UUID `json:"id"`
	BudgetID uuid.UUID `json:"budget_id"`
	Name     string    `json:"name"`
}

type Session struct {
	ID           uuid.UUID `json:"id"`
	Username     string    `json:"username"`
	RefreshToken string    `json:"refresh_token"`
	UserAgent    string    `json:"user_agent"`
	ClientIp     string    `json:"client_ip"`
	IsBlocked    bool      `json:"is_blocked"`
	ExpiresAt    time.Time `json:"expires_at"`
	CreatedAt    time.Time `json:"created_at"`
}

type Transaction struct {
	ID         uuid.UUID   `json:"id"`
	AccountID  uuid.UUID   `json:"account_id"`
	Date       pgtype.Date `json:"date"`
	PayeeID    uuid.UUID   `json:"payee_id"`
	CategoryID pgtype.UUID `json:"category_id"`
	Memo       pgtype.Text `json:"memo"`
	Amount     int32       `json:"amount"`
	Approved   bool        `json:"approved"`
	Cleared    bool        `json:"cleared"`
	Reconciled bool        `json:"reconciled"`
}

type TransactionsView struct {
	ID           uuid.UUID   `json:"id"`
	AccountID    uuid.UUID   `json:"account_id"`
	AccountName  string      `json:"account_name"`
	BudgetID     uuid.UUID   `json:"budget_id"`
	Date         pgtype.Date `json:"date"`
	PayeeID      uuid.UUID   `json:"payee_id"`
	PayeeName    string      `json:"payee_name"`
	CategoryID   pgtype.UUID `json:"category_id"`
	CategoryName string      `json:"category_name"`
	Memo         pgtype.Text `json:"memo"`
	Amount       int32       `json:"amount"`
	Approved     bool        `json:"approved"`
	Cleared      bool        `json:"cleared"`
	Reconciled   bool        `json:"reconciled"`
}

type User struct {
	ID                 uuid.UUID `json:"id"`
	Username           string    `json:"username"`
	Password           string    `json:"password"`
	Email              string    `json:"email"`
	EmailVerified      bool      `json:"email_verified"`
	CreatedAt          time.Time `json:"created_at"`
	LastPasswordChange time.Time `json:"last_password_change"`
}

type VerifyEmail struct {
	ID        int64     `json:"id"`
	Username  string    `json:"username"`
	Email     string    `json:"email"`
	Code      string    `json:"code"`
	Used      bool      `json:"used"`
	CreatedAt time.Time `json:"created_at"`
	ExpiresAt time.Time `json:"expires_at"`
}
