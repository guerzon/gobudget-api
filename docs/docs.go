// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/budgets": {
            "get": {
                "description": "List all budgets.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Budget"
                ],
                "summary": "List budgets",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.CreateBudgetParams"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new budget.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Budget"
                ],
                "summary": "Create budget",
                "parameters": [
                    {
                        "description": "Create a budget",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.CreateBudgetParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.CreateBudgetParams"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a budget.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Budget"
                ],
                "summary": "Delete budget",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Budget ID",
                        "name": "budget_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "budget deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/budgets/:budget_id": {
            "get": {
                "description": "Get the details of a budget.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Budget"
                ],
                "summary": "Get budget",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DetailedBudgetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/budgets/{budget_id}/accounts": {
            "get": {
                "description": "List all accounts associated with a budget.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "List all budgeting accounts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Budget ID",
                        "name": "budget_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.CreateAccountParams"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a budgeting account.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Create a budgeting account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Budget ID",
                        "name": "budget_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Account details",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.updateAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.CreateAccountParams"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/budgets/{budget_id}/accounts/{account_id}": {
            "get": {
                "description": "Get the details of an account associated with a budget.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Get a single budgeting account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Budget ID",
                        "name": "budget_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "account_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.CreateAccountParams"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a budgeting account.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Update a budgeting account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Budget ID",
                        "name": "budget_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "account_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Account details",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.updateAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.UpdateAccountParams"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a budgeting account.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Delete a budgeting account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Budget ID",
                        "name": "budget_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "account_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "budgeting account deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/budgets/{budget_id}/categories": {
            "get": {
                "description": "List all categories in a budget grouped by category group",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Get category groups and categories",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Budget ID",
                        "name": "budget_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.categoryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/budgets/{budget_id}/categories/{category_group_id}": {
            "post": {
                "description": "Create a budgeting category.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Create a budgeting category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Budget ID",
                        "name": "budget_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Category Group ID",
                        "name": "category_group_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Category details",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.categoryRqst"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Category"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/budgets/{budget_id}/categories/{category_id}": {
            "put": {
                "description": "Update a budgeting category.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Update a budgeting category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Budget ID",
                        "name": "budget_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "category_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Category details",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.categoryRqst"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Category"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a category.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Delete a category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Budget ID",
                        "name": "budget_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "category_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "category deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/budgets/{budget_id}/category-groups": {
            "get": {
                "description": "List all category groups associated with a budget.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "List all budgeting category groups",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Budget ID",
                        "name": "budget_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.CategoryGroup"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a budgeting category group.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Create a budgeting category group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Budget ID",
                        "name": "budget_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Category group details",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.categoryGroupRqst"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.CategoryGroup"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/budgets/{budget_id}/category-groups/{category_group_id}": {
            "put": {
                "description": "Update a budgeting category group.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Update a budgeting category group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Budget ID",
                        "name": "budget_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Category Group ID",
                        "name": "category_group_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Category group details",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.categoryGroupRqst"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.CategoryGroup"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a budgeting category group and all categories in the group.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Delete a category group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Budget ID",
                        "name": "budget_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Category Group ID",
                        "name": "category_group_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "category group deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/budgets/{budget_id}/payees": {
            "get": {
                "description": "Get all payees",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payees"
                ],
                "summary": "List payees",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Budget ID",
                        "name": "budget_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.Payee"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a spending recipient.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payees"
                ],
                "summary": "Create a payee",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Budget ID",
                        "name": "budget_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Payee details",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.payeeRqst"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Payee"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/budgets/{budget_id}/payees/{payee_id}": {
            "get": {
                "description": "Get a payee by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payees"
                ],
                "summary": "Get payee",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Budget ID",
                        "name": "budget_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Payee ID",
                        "name": "payee_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Payee"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a payee.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payees"
                ],
                "summary": "Update a payee",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Budget ID",
                        "name": "budget_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Payee ID",
                        "name": "Payee_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Payee details",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.payeeRqst"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Payee"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a payee.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payees"
                ],
                "summary": "Delete a payee",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Budget ID",
                        "name": "budget_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Payee ID",
                        "name": "Payee_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "payee deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/budgets/{budget_id}/transactions": {
            "get": {
                "description": "List all transactions across all accounts in the budget.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "List all transactions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Budget ID",
                        "name": "budget_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.TransactionsView"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a transaction.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Create a transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Budget ID",
                        "name": "budget_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Transaction details",
                        "name": "transaction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TransactionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.TransactionsView"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/budgets/{budget_id}/transactions/{transaction_id}": {
            "get": {
                "description": "Get the details of a transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Get a transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Budget ID",
                        "name": "budget_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Transaction ID",
                        "name": "transaction_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TransactionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/renew_token": {
            "post": {
                "description": "Renew access token using a refresh token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Security"
                ],
                "summary": "Renew token",
                "parameters": [
                    {
                        "description": "Refresh token",
                        "name": "refresh_token",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RenewTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RenewTokenResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/user": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update the authenticated user's account.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update user",
                "parameters": [
                    {
                        "description": "Update account",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new user account. An email is sent asking the user to verify their email.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Create user",
                "parameters": [
                    {
                        "description": "Create a new user",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete the authenticated user's account.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Delete user",
                "responses": {
                    "200": {
                        "description": "user has been deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "CreateUserRequest": {
            "type": "object",
            "required": [
                "email",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "fname.lname@contoso.com"
                },
                "password": {
                    "type": "string",
                    "minLength": 10,
                    "example": "password123456"
                },
                "username": {
                    "type": "string",
                    "minLength": 5
                }
            }
        },
        "DetailedBudgetResponse": {
            "type": "object",
            "properties": {
                "accounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.Account"
                    }
                },
                "currency_code": {
                    "type": "string",
                    "example": "USD"
                },
                "id": {
                    "type": "string",
                    "example": "ea930f68-e192-407d..."
                },
                "name": {
                    "type": "string",
                    "example": "My USD Budget"
                }
            }
        },
        "RenewTokenRequest": {
            "type": "object",
            "required": [
                "refresh_token"
            ],
            "properties": {
                "refresh_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1Ni..."
                }
            }
        },
        "RenewTokenResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1Ni..."
                },
                "access_token_expires_at": {
                    "type": "string",
                    "example": "2023-10-31T22:14:50+08:00"
                },
                "session_id": {
                    "type": "string",
                    "example": "ea930f68-e192-407d..."
                }
            }
        },
        "TransactionRequest": {
            "type": "object",
            "required": [
                "account_id",
                "amount",
                "category_id",
                "date",
                "payee_id"
            ],
            "properties": {
                "account_id": {
                    "type": "string"
                },
                "amount": {
                    "type": "integer"
                },
                "category_id": {
                    "type": "string"
                },
                "cleared": {
                    "type": "boolean"
                },
                "date": {
                    "type": "string"
                },
                "memo": {
                    "type": "string"
                },
                "payee_id": {
                    "type": "string"
                },
                "reconciled": {
                    "type": "boolean"
                }
            }
        },
        "TransactionResponse": {
            "type": "object",
            "properties": {
                "account_name": {
                    "type": "string"
                },
                "amount": {
                    "type": "integer"
                },
                "approved": {
                    "type": "boolean"
                },
                "category_name": {
                    "type": "string"
                },
                "cleared": {
                    "type": "boolean"
                },
                "date": {
                    "$ref": "#/definitions/pgtype.Date"
                },
                "memo": {
                    "$ref": "#/definitions/pgtype.Text"
                },
                "payee_name": {
                    "type": "string"
                },
                "reconciled": {
                    "type": "boolean"
                }
            }
        },
        "UpdateUserRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "fname.lname@contoso.com"
                },
                "password": {
                    "type": "string",
                    "example": "password123456"
                }
            }
        },
        "UserResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2023-09-29T22:14:50+08:00"
                },
                "email": {
                    "type": "string",
                    "example": "fname.lname@contoso.com"
                },
                "email_verified": {
                    "type": "boolean",
                    "example": true
                },
                "last_password_change": {
                    "type": "string",
                    "example": "2023-09-29T22:14:50+08:00"
                },
                "username": {
                    "type": "string",
                    "example": "rjoooidggt"
                }
            }
        },
        "api.HTTPError": {
            "type": "object",
            "properties": {
                "msg": {
                    "type": "string",
                    "example": "invalid request"
                }
            }
        },
        "api.categoryGroupRqst": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "minLength": 5,
                    "example": "Living Expenses"
                }
            }
        },
        "api.categoryResponse": {
            "type": "object",
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.Category"
                    }
                },
                "category_group_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "example": "Rent"
                }
            }
        },
        "api.categoryRqst": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "minLength": 2,
                    "example": "Rent"
                }
            }
        },
        "api.payeeRqst": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "minLength": 2,
                    "example": "Edeka"
                }
            }
        },
        "api.updateAccountRequest": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "integer",
                    "example": 100
                },
                "cleared_balance": {
                    "type": "integer",
                    "example": 50
                },
                "closed": {
                    "type": "boolean",
                    "example": false
                },
                "last_reconciled_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "example": "Chase Savings"
                },
                "note": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "example": "Savings"
                },
                "uncleared_balance": {
                    "type": "integer",
                    "example": 50
                }
            }
        },
        "db.Account": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "integer"
                },
                "budget_id": {
                    "type": "string"
                },
                "cleared_balance": {
                    "type": "integer"
                },
                "closed": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "last_reconciled_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "note": {
                    "$ref": "#/definitions/pgtype.Text"
                },
                "type": {
                    "type": "string"
                },
                "uncleared_balance": {
                    "type": "integer"
                }
            }
        },
        "db.Category": {
            "type": "object",
            "properties": {
                "category_group_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "db.CategoryGroup": {
            "type": "object",
            "properties": {
                "budget_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "db.CreateAccountParams": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "integer"
                },
                "budget_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "db.CreateBudgetParams": {
            "type": "object",
            "properties": {
                "currency_code": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner_username": {
                    "type": "string"
                }
            }
        },
        "db.Payee": {
            "type": "object",
            "properties": {
                "budget_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "db.TransactionsView": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string"
                },
                "account_name": {
                    "type": "string"
                },
                "amount": {
                    "type": "integer"
                },
                "approved": {
                    "type": "boolean"
                },
                "budget_id": {
                    "type": "string"
                },
                "category_id": {
                    "type": "string"
                },
                "category_name": {
                    "type": "string"
                },
                "cleared": {
                    "type": "boolean"
                },
                "date": {
                    "$ref": "#/definitions/pgtype.Date"
                },
                "id": {
                    "type": "string"
                },
                "memo": {
                    "$ref": "#/definitions/pgtype.Text"
                },
                "payee_id": {
                    "type": "string"
                },
                "payee_name": {
                    "type": "string"
                },
                "reconciled": {
                    "type": "boolean"
                }
            }
        },
        "db.UpdateAccountParams": {
            "type": "object",
            "properties": {
                "balance": {
                    "$ref": "#/definitions/pgtype.Int4"
                },
                "budget_id": {
                    "type": "string"
                },
                "cleared_balance": {
                    "$ref": "#/definitions/pgtype.Int4"
                },
                "closed": {
                    "$ref": "#/definitions/pgtype.Bool"
                },
                "id": {
                    "type": "string"
                },
                "last_reconciled_at": {
                    "$ref": "#/definitions/pgtype.Timestamptz"
                },
                "name": {
                    "$ref": "#/definitions/pgtype.Text"
                },
                "note": {
                    "$ref": "#/definitions/pgtype.Text"
                },
                "type": {
                    "$ref": "#/definitions/pgtype.Text"
                },
                "uncleared_balance": {
                    "$ref": "#/definitions/pgtype.Int4"
                }
            }
        },
        "pgtype.Bool": {
            "type": "object",
            "properties": {
                "bool": {
                    "type": "boolean"
                },
                "valid": {
                    "type": "boolean"
                }
            }
        },
        "pgtype.Date": {
            "type": "object",
            "properties": {
                "infinityModifier": {
                    "$ref": "#/definitions/pgtype.InfinityModifier"
                },
                "time": {
                    "type": "string"
                },
                "valid": {
                    "type": "boolean"
                }
            }
        },
        "pgtype.InfinityModifier": {
            "type": "integer",
            "enum": [
                1,
                0,
                -1
            ],
            "x-enum-varnames": [
                "Infinity",
                "Finite",
                "NegativeInfinity"
            ]
        },
        "pgtype.Int4": {
            "type": "object",
            "properties": {
                "int32": {
                    "type": "integer"
                },
                "valid": {
                    "type": "boolean"
                }
            }
        },
        "pgtype.Text": {
            "type": "object",
            "properties": {
                "string": {
                    "type": "string"
                },
                "valid": {
                    "type": "boolean"
                }
            }
        },
        "pgtype.Timestamptz": {
            "type": "object",
            "properties": {
                "infinityModifier": {
                    "$ref": "#/definitions/pgtype.InfinityModifier"
                },
                "time": {
                    "type": "string"
                },
                "valid": {
                    "type": "boolean"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "beta",
	Host:             "localhost:8080",
	BasePath:         "/beta",
	Schemes:          []string{},
	Title:            "gobudget API",
	Description:      "gobudget API",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
